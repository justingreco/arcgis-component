import './geometry-2f332a26.js';
import { s, t, ag as c$1 } from './cast-3d5be210.js';
import { z } from './unitUtils-a0a11e54.js';
import { f as f$1, w, u as u$1 } from './aaBoundingRect-5e1a4e52.js';
import { M, j } from './Point-edff2a11.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
const m=s.getLogger("esri.layers.support.ElevationSampler");class c{queryElevation(e){return h(e.clone(),this)}on(){return g}projectIfRequired(e,t){return f(e,t)}}class u extends c{constructor(e,t,n){super(),this.tile=e,this.noDataValue=n,this.extent=f$1(e.tile.extent,t.spatialReference),this.extent.zmin=e.zmin,this.extent.zmax=e.zmax,this.aaExtent=e.tile.extent;const o=z(t.spatialReference),a=t.lodAt(e.tile.level).resolution*o;this.demResolution={min:a,max:a};}get spatialReference(){return this.extent.spatialReference}contains(e){const n=this.projectIfRequired(e,this.spatialReference);return !t(n)&&this.containsAt(n.x,n.y)}containsAt(e,t){return w(this.aaExtent,e,t)}elevationAt(e,t){if(!this.containsAt(e,t)){const n=this.extent,s=`${n.xmin}, ${n.ymin}, ${n.xmax}, ${n.ymax}`;return m.warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${s})`),this.noDataValue}return c$1(this.tile.sample(e,t),this.noDataValue)}}class p extends c{constructor(e,t,n){let s;super(),"number"==typeof t?(this.noDataValue=t,s=null):(s=t,this.noDataValue=n),this.samplers=s?e.map((e=>new u(e,s,this.noDataValue))):e;const o=this.samplers[0];if(o){this.extent=o.extent.clone();const{min:e,max:t}=o.demResolution;this.demResolution={min:e,max:t};for(let n=1;n<this.samplers.length;n++){const e=this.samplers[n];this.extent.union(e.extent),this.demResolution.min=Math.min(this.demResolution.min,e.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,e.demResolution.max);}}else this.extent=f$1(u$1(),s.spatialReference),this.demResolution={min:0,max:0};}get spatialReference(){return this.extent.spatialReference}elevationAt(e,t){for(const n of this.samplers)if(n.containsAt(e,t))return n.elevationAt(e,t);return m.warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler`),this.noDataValue}}function h(e,t){const n=f(e,t.spatialReference);if(!n)return null;switch(e.type){case"point":x(e,n,t);break;case"polyline":R(e,n,t);break;case"multipoint":d(e,n,t);}return e}function f(e,n){if(t(e))return null;const s=e.spatialReference;if(s.equals(n))return e;const i=M(e,n);return i||m.error(`Cannot project geometry spatial reference (wkid:${s.wkid}) to elevation sampler spatial reference (wkid:${n.wkid})`),i}function x(e,t,n){e.z=n.elevationAt(t.x,t.y);}function R(e,t,n){y.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let i=0;i<e.paths.length;i++){const o=e.paths[i],a=t.paths[i];for(let e=0;e<o.length;e++){const t=o[e],i=a[e];y.x=i[0],y.y=i[1],s&&(t[3]=t[2]),t[2]=n.elevationAt(y.x,y.y);}}e.hasZ=!0;}function d(e,t,n){y.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let i=0;i<e.points.length;i++){const o=e.points[i],a=t.points[i];y.x=a[0],y.y=a[1],s&&(o[3]=o[2]),o[2]=n.elevationAt(y.x,y.y);}e.hasZ=!0;}const y=new j,g={remove(){}};

export { h, p };
