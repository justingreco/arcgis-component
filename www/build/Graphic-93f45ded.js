import { r, R as e, e as e$1, d as d$1, n } from './cast-3d5be210.js';
import { d, i } from './geometry-2f332a26.js';
import { B } from './PopupTemplate-b459951f.js';
import { j } from './symbols-ab3e849a.js';
import { l } from './Clonable-533c7a05.js';
import { l as l$1 } from './JSONSupport-dce2c67b.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
function y(t){if(!t)return null;const e={};for(const r in t){const o=d(t[r]);o&&(e[r]=o);}return 0!==Object.keys(e).length?e:null}function m(t){if(!r(t))return null;const e={};for(const r in t){const o=t[r];o&&(e[r]=o.toJSON());}return 0!==Object.keys(e).length?e:null}let h=class extends(l(l$1)){constructor(...t){super(...t),this.isAggregate=!1,this.layer=null,this.popupTemplate=null,this.sourceLayer=null,Object.defineProperty(this,"uid",{value:e(),configurable:!0});}normalizeCtorArgs(t,e,r,o){return t&&!t.declaredClass?t:{geometry:t,symbol:e,attributes:r,popupTemplate:o}}set aggregateGeometries(t){const e=this._get("aggregateGeometries");JSON.stringify(e)!==JSON.stringify(t)&&this._set("aggregateGeometries",t);}set attributes(t){const e=this._get("attributes");e!==t&&(this._set("attributes",t),this._notifyLayer("attributes",e,t));}set geometry(t){const e=this._get("geometry");e!==t&&(this._set("geometry",t),this._notifyLayer("geometry",e,t));}set symbol(t){const e=this._get("symbol");e!==t&&(this._set("symbol",t),this._notifyLayer("symbol",e,t));}set visible(t){const e=this._get("visible");e!==t&&(this._set("visible",t),this._notifyLayer("visible",e,t));}getEffectivePopupTemplate(t=!1){if(this.popupTemplate)return this.popupTemplate;for(const e of [this.sourceLayer,this.layer])if(e){if("popupTemplate"in e&&e.popupTemplate)return e.popupTemplate;if(t&&"defaultPopupTemplate"in e&&r(e.defaultPopupTemplate))return e.defaultPopupTemplate}return null}getAttribute(t){return this.attributes&&this.attributes[t]}setAttribute(t,e){if(this.attributes){const r=this.getAttribute(t);this.attributes[t]=e,this._notifyLayer("attributes",r,e,t);}else this.attributes={[t]:e},this._notifyLayer("attributes",void 0,e,t);}getObjectId(){return this.sourceLayer&&"objectIdField"in this.sourceLayer&&this.sourceLayer.objectIdField?this.getAttribute(this.sourceLayer.objectIdField):null}toJSON(){return {aggregateGeometries:m(this.aggregateGeometries),geometry:r(this.geometry)?this.geometry.toJSON():null,symbol:r(this.symbol)?this.symbol.toJSON():null,attributes:{...this.attributes},popupTemplate:this.popupTemplate&&this.popupTemplate.toJSON()}}notifyGeometryChanged(){this._notifyLayer("geometry",this.geometry,this.geometry);}notifyMeshTransformChanged(){r(this.geometry)&&"mesh"===this.geometry.type&&this._notifyLayer("transform",this.geometry.transform,this.geometry.transform);}_notifyLayer(t,e,r,o){if(!this.layer||!("graphicChanged"in this.layer))return;const s={graphic:this,property:t,oldValue:e,newValue:r};"attributes"===t&&(s.attributeName=o),this.layer.graphicChanged(s);}};e$1([d$1({value:null,json:{read:y}})],h.prototype,"aggregateGeometries",null),e$1([d$1({value:null})],h.prototype,"attributes",null),e$1([d$1({value:null,types:i,json:{read:d}})],h.prototype,"geometry",null),e$1([d$1({type:Boolean})],h.prototype,"isAggregate",void 0),e$1([d$1({clonable:"reference"})],h.prototype,"layer",void 0),e$1([d$1({type:B})],h.prototype,"popupTemplate",void 0),e$1([d$1({clonable:"reference"})],h.prototype,"sourceLayer",void 0),e$1([d$1({value:null,types:j})],h.prototype,"symbol",null),e$1([d$1({type:Boolean,value:!0})],h.prototype,"visible",null),h=e$1([n("esri.Graphic")],h),function(t){t.generateUID=e;}(h||(h={}));const g=h;

export { g };
