import { r, $ as w, a as s$1, e, d as d$1, I as s$2, n as n$1 } from './cast-3d5be210.js';
import { j, U, m as I$1, Q } from './request-ac4d8bfb.js';
import { a as a$1 } from './HandleOwner-fe336959.js';
import { O } from './MultiOriginJSONSupport-281c1c62.js';
import { k, o as o$1, r as r$1 } from './Point-edff2a11.js';
import { b } from './Layer-569a1fc8.js';
import { i } from './APIKeyMixin-04df9c0f.js';
import { s } from './ArcGISCachedService-ad6ede63.js';
import { E, y, X } from './SublayersOwner-9597fc5b.js';
import { p } from './ArcGISService-848d76dd.js';
import { a } from './BlendLayer-7884099a.js';
import { o } from './CustomParametersMixin-f702935f.js';
import { c } from './OperationalLayer-e04486e0.js';
import { v } from './PortalLayer-e61e1a42.js';
import { n } from './RefreshableLayer-496830b9.js';
import { t } from './ScaleRangeLayer-f9a9951f.js';
import { m, g, d } from './arcgisLayerUrl-a268a370.js';
import { f } from './commonProperties-fca3036e.js';
import './Handles-54afc0a7.js';
import './Collection-a38e0489.js';
import './reactiveUtils-bd6fe823.js';
import './JSONSupport-dce2c67b.js';
import './geometry-2f332a26.js';
import './Extent-f27111e1.js';
import './Polyline-dcdb3782.js';
import './Identifiable-d9658370.js';
import './Portal-5df9f5a7.js';
import './Promise-d2759b2e.js';
import './TilemapCache-55eaec41.js';
import './TileInfo-3c9e9a6a.js';
import './unitUtils-a0a11e54.js';
import './aaBoundingRect-5e1a4e52.js';
import './mathUtils-559a53d9.js';
import './byteSizeEstimations-5d50d6ff.js';
import './LRUCache-5f25d277.js';
import './MemCache-04cdd0cd.js';
import './Version-44ff489f.js';
import './CollectionFlattener-9ce72729.js';
import './PopupTemplate-b459951f.js';
import './fieldUtils-240a3b99.js';
import './enumeration-6695a859.js';
import './number-c5a37d3e.js';
import './ActionToggle-a5849e6f.js';
import './UniqueValueRenderer-bb66af10.js';
import './symbols-ab3e849a.js';
import './CIMSymbol-15bdb580.js';
import './Symbol-573a64f6.js';
import './Color-25ce730a.js';
import './colorUtils-5009883d.js';
import './screenUtils-31d073db.js';
import './opacityUtils-dcd94f00.js';
import './aaBoundingBox-b312516d.js';
import './persistableUrlUtils-5dcd6081.js';
import './collectionUtils-302901c0.js';
import './Clonable-533c7a05.js';
import './ColorStop-64c57e35.js';
import './diffUtils-6436a697.js';
import './colorRamps-e3d9340f.js';
import './sizeVariableUtils-5330814d.js';
import './Graphic-93f45ded.js';
import './compilerUtils-d149ad5f.js';
import './jsonUtils-a25e8eb8.js';
import './styleUtils-d2332fad.js';
import './jsonUtils-e7c7add9.js';
import './DictionaryLoader-d0d1b4ff.js';
import './aliasOf-bdfe6662.js';
import './heatmapUtils-d302cc7f.js';
import './vec4f64-011248e0.js';
import './sql-817bbae7.js';
import './FeatureType-691faa46.js';
import './Field-2973a5cf.js';
import './fieldType-eb0b42e4.js';
import './FieldsIndex-ea481e79.js';
import './LabelClass-936eaa93.js';
import './labelUtils-824fc88a.js';
import './defaultsJSON-5fb6161d.js';
import './LayerFloorInfo-b83a3647.js';
import './Query-1f6c7e43.js';
import './TimeExtent-66b53603.js';
import './popupUtils-883a107f.js';
import './sublayerUtils-074af654.js';
import './jsonUtils-f3f35e7f.js';
import './mat4-d5df0e58.js';
import './_commonjsHelpers-8dd5c177.js';
import './asyncUtils-96c00c9e.js';
import './PortalItem-fa114dd2.js';
import './assets-99f5c3ee.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
const W=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let I=class extends(a(E(t(c(v(s(y(p(O(a$1(n(i(o(b)))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null;}normalizeCtorArgs(e,r){return "string"==typeof e?{url:e,...r}:e}load(e){const r$1=r(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(w).then((()=>this._fetchService(r$1)))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e&&this._getDefaultAttribution(this._getMapName(e))}readSpatialReference(e,r){return (e=e||r.tileInfo&&r.tileInfo.spatialReference)&&k.fromJSON(e)}writeSublayers(e,r,t,s){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray(),o=[],a={writeSublayerStructure:!1,...s};i.forEach((e=>{const r=e.write({},a);o.push(r);}));o.some((e=>Object.keys(e).length>1))&&(r.layers=o);}get tileServers(){return this._getDefaultTileServers(this.parsedUrl.path)}castTileServers(e){return Array.isArray(e)?e.map((e=>j(e).path)):null}fetchTile(e,t,s,i={}){const{signal:o}=i,a=this.getTileUrl(e,t,s),l={responseType:"image",signal:o,query:{...this.refreshParameters}};return U(a,l).then((e=>e.data))}getTileUrl(e,r,t){const s=!this.tilemapCache&&this.supportsBlankTile,i=I$1({...this.parsedUrl.query,blankTile:!s&&null,...this.customParameters,token:this.apiKey}),o=this.tileServers;return `${o&&o.length?o[r%o.length]:this.parsedUrl.path}/tile/${e}/${r}/${t}${i?"?"+i:""}`}_fetchService(e){return new Promise(((s,o)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new s$1("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void s({data:this.sourceJSON})}if(!this.parsedUrl)throw new s$1("tile-layer:undefined-url","layer's url is not defined");const a=m(this.parsedUrl.path);if(r(a)&&"ImageServer"===a.serverType)throw new s$1("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");U(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(s,o);})).then((r=>{if(r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!g(this.url))return this._fetchServerVersion(this.url,e).then((e=>{this.read({currentVersion:e});})).catch((()=>{}))}))}_fetchServerVersion(e,s){if(!d(e))return Promise.reject();const i=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return U(i,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:s}).then((e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new s$1("tile-layer:version-not-available")}))}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return r&&r[2]}_getDefaultAttribution(e){if(!e)return;let r;e=e.toLowerCase();for(let t=0,s=W.length;t<s;t++)if(r=W[t],r.toLowerCase().includes(e))return Q("//static.arcgis.com/attribution/"+r)}_getDefaultTileServers(e){const r=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),t=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return !this.fetchTile.__isDefault__}};e([d$1({readOnly:!0})],I.prototype,"attributionDataUrl",null),e([d$1({type:["show","hide","hide-children"]})],I.prototype,"listMode",void 0),e([d$1({json:{read:!0,write:!0}})],I.prototype,"blendMode",void 0),e([d$1({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],I.prototype,"isReference",void 0),e([d$1({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],I.prototype,"operationalLayerType",void 0),e([d$1({type:Boolean})],I.prototype,"resampling",void 0),e([d$1()],I.prototype,"sourceJSON",void 0),e([d$1({type:k})],I.prototype,"spatialReference",void 0),e([o$1("spatialReference",["spatialReference","tileInfo"])],I.prototype,"readSpatialReference",null),e([d$1({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],I.prototype,"path",void 0),e([d$1({readOnly:!0})],I.prototype,"sublayers",void 0),e([r$1("sublayers",{layers:{type:[X]}})],I.prototype,"writeSublayers",null),e([d$1({json:{read:!1,write:!1}})],I.prototype,"popupEnabled",void 0),e([d$1()],I.prototype,"tileServers",null),e([s$2("tileServers")],I.prototype,"castTileServers",null),e([d$1({readOnly:!0,json:{read:!1}})],I.prototype,"type",void 0),e([d$1(f)],I.prototype,"url",void 0),I=e([n$1("esri.layers.TileLayer")],I),I.prototype.fetchTile.__isDefault__=!0;const C=I;

export default C;
