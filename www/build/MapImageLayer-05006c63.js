import { r, $ as w, a9 as t$1, a3 as r$1, a as s, J as g, e as e$1, d, S, n as n$3 } from './cast-3d5be210.js';
import { U } from './request-ac4d8bfb.js';
import { y as y$1 } from './TimeExtent-66b53603.js';
import { a as a$2 } from './HandleOwner-fe336959.js';
import { n as n$2 } from './loadAll-0acccebb.js';
import { O } from './MultiOriginJSONSupport-281c1c62.js';
import { o as o$1, r as r$3 } from './Point-edff2a11.js';
import { M } from './Extent-f27111e1.js';
import { r as r$2 } from './scaleUtils-c3d4b164.js';
import { b } from './Layer-569a1fc8.js';
import { i } from './APIKeyMixin-04df9c0f.js';
import { E, y, X } from './SublayersOwner-9597fc5b.js';
import { p } from './ArcGISService-848d76dd.js';
import { a } from './BlendLayer-7884099a.js';
import { o } from './CustomParametersMixin-f702935f.js';
import { c } from './OperationalLayer-e04486e0.js';
import { v } from './PortalLayer-e61e1a42.js';
import { n } from './RefreshableLayer-496830b9.js';
import { t } from './ScaleRangeLayer-f9a9951f.js';
import { a as a$1 } from './TemporalLayer-6cfc496a.js';
import { f } from './commonProperties-fca3036e.js';
import { c as c$1 } from './ExportImageParameters-6558457d.js';
import { n as n$1 } from './sublayerUtils-074af654.js';
import { e } from './versionUtils-55e187fe.js';
import './JSONSupport-dce2c67b.js';
import './Handles-54afc0a7.js';
import './Collection-a38e0489.js';
import './reactiveUtils-bd6fe823.js';
import './asyncUtils-96c00c9e.js';
import './Portal-5df9f5a7.js';
import './Promise-d2759b2e.js';
import './unitUtils-a0a11e54.js';
import './geometry-2f332a26.js';
import './Polyline-dcdb3782.js';
import './Identifiable-d9658370.js';
import './Version-44ff489f.js';
import './CollectionFlattener-9ce72729.js';
import './PopupTemplate-b459951f.js';
import './fieldUtils-240a3b99.js';
import './enumeration-6695a859.js';
import './number-c5a37d3e.js';
import './ActionToggle-a5849e6f.js';
import './UniqueValueRenderer-bb66af10.js';
import './symbols-ab3e849a.js';
import './CIMSymbol-15bdb580.js';
import './Symbol-573a64f6.js';
import './Color-25ce730a.js';
import './colorUtils-5009883d.js';
import './mathUtils-559a53d9.js';
import './screenUtils-31d073db.js';
import './opacityUtils-dcd94f00.js';
import './aaBoundingBox-b312516d.js';
import './aaBoundingRect-5e1a4e52.js';
import './persistableUrlUtils-5dcd6081.js';
import './collectionUtils-302901c0.js';
import './Clonable-533c7a05.js';
import './ColorStop-64c57e35.js';
import './diffUtils-6436a697.js';
import './colorRamps-e3d9340f.js';
import './sizeVariableUtils-5330814d.js';
import './Graphic-93f45ded.js';
import './compilerUtils-d149ad5f.js';
import './jsonUtils-a25e8eb8.js';
import './styleUtils-d2332fad.js';
import './jsonUtils-e7c7add9.js';
import './DictionaryLoader-d0d1b4ff.js';
import './LRUCache-5f25d277.js';
import './MemCache-04cdd0cd.js';
import './aliasOf-bdfe6662.js';
import './heatmapUtils-d302cc7f.js';
import './vec4f64-011248e0.js';
import './sql-817bbae7.js';
import './arcgisLayerUrl-a268a370.js';
import './FeatureType-691faa46.js';
import './Field-2973a5cf.js';
import './fieldType-eb0b42e4.js';
import './FieldsIndex-ea481e79.js';
import './LabelClass-936eaa93.js';
import './labelUtils-824fc88a.js';
import './defaultsJSON-5fb6161d.js';
import './LayerFloorInfo-b83a3647.js';
import './Query-1f6c7e43.js';
import './popupUtils-883a107f.js';
import './jsonUtils-f3f35e7f.js';
import './mat4-d5df0e58.js';
import './_commonjsHelpers-8dd5c177.js';
import './PortalItem-fa114dd2.js';
import './assets-99f5c3ee.js';
import './TimeInfo-0c128ef4.js';
import './floorFilterUtils-904cfc06.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
let q=class extends(a(a$1(t(E(y(p(c(v(O(n(i(o(a$2(b)))))))))))))){constructor(...e){super(...e),this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null;}normalizeCtorArgs(e,r){return "string"==typeof e?{url:e,...r}:e}load(e){const r$1=r(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(w).then((()=>this._fetchService(r$1)))),Promise.resolve(this)}readImageFormat(e,r){const t=r.supportedImageFormatTypes;return t&&t.includes("PNG32")?"png32":"png24"}writeSublayers(e,r,t,o){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let s=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=t$1(o.origin);if(e===r$1.PORTAL_ITEM){const e=this.createSublayersForOrigin("service").sublayers;s=n$1(i,e,r$1.SERVICE);}else if(e>r$1.PORTAL_ITEM){const e=this.createSublayersForOrigin("portal-item");s=n$1(i,e.sublayers,t$1(e.origin));}}const a=[],p={writeSublayerStructure:s,...o};let n=s;i.forEach((e=>{const r=e.write({},p);a.push(r),n=n||"user"===e.originOf("visible");}));a.some((e=>Object.keys(e).length>1))&&(r.layers=a),n&&(r.visibleLayers=i.filter((e=>e.visible)).map((e=>e.id)));}createExportImageParameters(e,r,t,o){const i=o&&o.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const s=new c$1({layer:this,floors:o?.floors,scale:r$2({extent:e,width:r})*i}),a=s.toJSON();s.destroy();const p=!o||!o.rotation||this.version<10.3?{}:{rotation:-o.rotation},n=e&&e.spatialReference,m=n.wkid||JSON.stringify(n.toJSON());a.dpi*=i;const l={};if(o?.timeExtent){const{start:e,end:r}=o.timeExtent.toJSON();l.time=e&&r&&e===r?""+e:`${null==e?"null":e},${null==r?"null":r}`;}else this.timeInfo&&!this.timeInfo.hasLiveData&&(l.time="null,null");return {bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:m,imageSR:m,size:r+","+t,...a,...p,...l}}async fetchImage(e,t,i,s$1){const a={responseType:"image",signal:s$1?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(e,t,i,s$1),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},p=this.parsedUrl.path+"/export";if(null!=a.query.dynamicLayers&&!this.capabilities.exportMap.supportsDynamicLayers)throw new s("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:a.query});return U(p,a).then((e=>e.data)).catch((e=>{if(g(e))throw e;throw new s("mapimagelayer:image-fetch-error",`Unable to load image: ${p}`,{error:e})}))}async fetchRecomputedExtents(e={}){const o={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:i}=await U(this.url,o),{extent:s,fullExtent:a,timeExtent:p}=i,n=s||a;return {fullExtent:n&&M.fromJSON(n),timeExtent:p&&y$1.fromJSON({start:p[0],end:p[1]})}}loadAll(){return n$2(this,(e=>{e(this.allSublayers);}))}serviceSupportsSpatialReference(e$1){return e(this,e$1)}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:o}=await U(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});o&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl});}};e$1([d({type:Boolean})],q.prototype,"datesInUnknownTimezone",void 0),e$1([d()],q.prototype,"dpi",void 0),e$1([d()],q.prototype,"gdbVersion",void 0),e$1([d()],q.prototype,"imageFormat",void 0),e$1([o$1("imageFormat",["supportedImageFormatTypes"])],q.prototype,"readImageFormat",null),e$1([d({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],q.prototype,"imageMaxHeight",void 0),e$1([d({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],q.prototype,"imageMaxWidth",void 0),e$1([d()],q.prototype,"imageTransparency",void 0),e$1([d({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],q.prototype,"isReference",void 0),e$1([d({json:{read:!1,write:!1}})],q.prototype,"labelsVisible",void 0),e$1([d({type:["ArcGISMapServiceLayer"]})],q.prototype,"operationalLayerType",void 0),e$1([d({json:{read:!1,write:!1}})],q.prototype,"popupEnabled",void 0),e$1([d()],q.prototype,"sourceJSON",void 0),e$1([d({json:{write:{ignoreOrigin:!0}}})],q.prototype,"sublayers",void 0),e$1([r$3("sublayers",{layers:{type:[X]},visibleLayers:{type:[S]}})],q.prototype,"writeSublayers",null),e$1([d({type:["show","hide","hide-children"]})],q.prototype,"listMode",void 0),e$1([d({json:{read:!1},readOnly:!0,value:"map-image"})],q.prototype,"type",void 0),e$1([d(f)],q.prototype,"url",void 0),q=e$1([n$3("esri.layers.MapImageLayer")],q);const F=q;

export default F;
