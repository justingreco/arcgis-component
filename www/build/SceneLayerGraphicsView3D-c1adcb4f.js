import { s, r as r$1, H as l$2, t as t$1, h as e$1, b4 as M, e as e$2, d, n as n$2 } from './cast-3d5be210.js';
import { g as g$1 } from './Graphic-93f45ded.js';
import { h, l } from './reactiveUtils-bd6fe823.js';
import { r as r$2, u, n as n$3 } from './mathUtils-559a53d9.js';
import { U as Un, B as Bn, z as zn } from './projection-fbd5d346.js';
import { u as u$1 } from './aaBoundingRect-5e1a4e52.js';
import { e } from './Extent-f27111e1.js';
import { o as o$1 } from './zscale-0befeff4.js';
import { v, A } from './dehydratedFeatures-7b45465d.js';
import { aK as ze, v as t, aL as ie$1, X as Se, c as c$2, aM as H, t as t$2, a4 as Me } from './SceneView-ed3703c9.js';
import { s as s$1, f, t as te$1 } from './I3SAttributeOverrides-6aeb30a4.js';
import { y } from './labelingInfo-6e0c44d1.js';
import { b } from './Query-1f6c7e43.js';
import { a as n } from './LercDecoder-0b4fb3f9.js';
import { n as n$1 } from './LayerView3D-eec9cc5a.js';
import { F, l as l$1 } from './Graphics3DFeatureProcessor-654b037b.js';
import { i, g, c as c$1, a as i$1, b as a } from './SceneLayerView-36b882ff.js';
import { p } from './DefinitionExpressionSceneLayerView-67d9f6c0.js';
import { c } from './PopupSceneLayerView-cfd38f5f.js';
import { o } from './OrderIndependentTransparency-b8c8f539.js';
import { L } from './Scheduler-ed7a36dc.js';
import './geometry-2f332a26.js';
import './Point-edff2a11.js';
import './JSONSupport-dce2c67b.js';
import './Polyline-dcdb3782.js';
import './request-ac4d8bfb.js';
import './PopupTemplate-b459951f.js';
import './Collection-a38e0489.js';
import './fieldUtils-240a3b99.js';
import './enumeration-6695a859.js';
import './number-c5a37d3e.js';
import './Promise-d2759b2e.js';
import './ActionToggle-a5849e6f.js';
import './Identifiable-d9658370.js';
import './symbols-ab3e849a.js';
import './CIMSymbol-15bdb580.js';
import './Symbol-573a64f6.js';
import './Color-25ce730a.js';
import './colorUtils-5009883d.js';
import './screenUtils-31d073db.js';
import './opacityUtils-dcd94f00.js';
import './aaBoundingBox-b312516d.js';
import './persistableUrlUtils-5dcd6081.js';
import './collectionUtils-302901c0.js';
import './Portal-5df9f5a7.js';
import './Clonable-533c7a05.js';
import './unitUtils-a0a11e54.js';
import './mat4-d5df0e58.js';
import './assets-99f5c3ee.js';
import './byteSizeEstimations-5d50d6ff.js';
import './quantizationUtils-65995723.js';
import './Field-2973a5cf.js';
import './fieldType-eb0b42e4.js';
import './Viewpoint-e3d4029a.js';
import './Cyclical-922b1741.js';
import './jsxFactory-4cd653a4.js';
import './intl-54ccdc89.js';
import './messages-5e9a4a9e.js';
import './Handles-54afc0a7.js';
import './uuid-ac104993.js';
import './index-f980186a.js';
import './workers-c7a27acb.js';
import './GraphicsCollection-851bdafb.js';
import './HandleOwner-fe336959.js';
import './HeightModelInfo-12951268.js';
import './viewpointUtils-4c294048.js';
import './asyncUtils-96c00c9e.js';
import './mat3-eb8de168.js';
import './quatf64-06b7eadd.js';
import './mat4f64-ef2c1a38.js';
import './frustum-95850b85.js';
import './vectorStacks-3fa8ee55.js';
import './vec2f64-2956001b.js';
import './vec4f64-011248e0.js';
import './sphere-4710475c.js';
import './ViewingMode-4a1cffad.js';
import './lineSegment-99193ade.js';
import './utils-eafc976f.js';
import './quat-43e08490.js';
import './vec3f32-03e33744.js';
import './Util-73f4ac53.js';
import './doublePrecisionUtils-5c7a1f3b.js';
import './scaleUtils-c3d4b164.js';
import './layerUtils-160a1a44.js';
import './DefaultUI-a0db5719.js';
import './Feature-d7b2670c.js';
import './aliasOf-bdfe6662.js';
import './executeQueryJSON-cbafa4d9.js';
import './utils-d801fb7f.js';
import './query-993c240b.js';
import './normalizeUtils-d37dc597.js';
import './pbfQueryUtils-266d53dd.js';
import './pbf-bac0c6a4.js';
import './OptimizedFeature-a0dba562.js';
import './OptimizedFeatureSet-261a115b.js';
import './queryZScale-127601ac.js';
import './FeatureSet-1b85367a.js';
import './TopFeaturesQuery-babc7c57.js';
import './TimeExtent-66b53603.js';
import './utils-112c7fa0.js';
import './ColorStop-64c57e35.js';
import './utils-2bda91e5.js';
import './jsonUtils-f3f35e7f.js';
import './_commonjsHelpers-8dd5c177.js';
import './ItemCache-1f62ab56.js';
import './MemCache-04cdd0cd.js';
import './utils-8133dc40.js';
import './jsonUtils-e7c7add9.js';
import './UniqueValueRenderer-bb66af10.js';
import './diffUtils-6436a697.js';
import './colorRamps-e3d9340f.js';
import './sizeVariableUtils-5330814d.js';
import './compilerUtils-d149ad5f.js';
import './commonProperties-fca3036e.js';
import './jsonUtils-a25e8eb8.js';
import './styleUtils-d2332fad.js';
import './DictionaryLoader-d0d1b4ff.js';
import './LRUCache-5f25d277.js';
import './heatmapUtils-d302cc7f.js';
import './widget-a58988b6.js';
import './vmEvent-c5708c9c.js';
import './themeUtils-b1f4a2e4.js';
import './featureConversionUtils-3f60eb15.js';
import './languageUtils-d37e9fbb.js';
import './number-3228daf9.js';
import './FeatureLayer-6922c890.js';
import './MultiOriginJSONSupport-281c1c62.js';
import './sql-817bbae7.js';
import './Layer-569a1fc8.js';
import './APIKeyMixin-04df9c0f.js';
import './ArcGISService-848d76dd.js';
import './arcgisLayerUrl-a268a370.js';
import './BlendLayer-7884099a.js';
import './CustomParametersMixin-f702935f.js';
import './OperationalLayer-e04486e0.js';
import './OrderedLayer-d02e1d58.js';
import './PortalLayer-e61e1a42.js';
import './PortalItem-fa114dd2.js';
import './RefreshableLayer-496830b9.js';
import './ScaleRangeLayer-f9a9951f.js';
import './TemporalLayer-6cfc496a.js';
import './TimeInfo-0c128ef4.js';
import './FeatureType-691faa46.js';
import './fieldProperties-fa42dff4.js';
import './FieldsIndex-ea481e79.js';
import './LabelClass-936eaa93.js';
import './labelUtils-824fc88a.js';
import './defaultsJSON-5fb6161d.js';
import './LayerFloorInfo-b83a3647.js';
import './versionUtils-55e187fe.js';
import './styleUtils-106413c0.js';
import './popupUtils-883a107f.js';
import './symbolUtils-7f5a2832.js';
import './colorUtils-e0bbe79f.js';
import './mat2d-677a80fe.js';
import './GoTo-929e809f.js';
import './Map-3fa127ca.js';
import './Basemap-bccaf827.js';
import './loadAll-0acccebb.js';
import './writeUtils-ab23132f.js';
import './CollectionFlattener-9ce72729.js';
import './TablesMixin-6752cfb1.js';
import './heightModelInfoUtils-4737da37.js';
import './vec2-4f9a494f.js';
import './vec2f32-23e4a539.js';
import './capabilities-cb32c85a.js';
import './context-util-5ae1bf7b.js';
import './ElevationSampler-86027644.js';
import './TileInfo-3c9e9a6a.js';
import './objectResourceUtils-e575a410.js';
import './devEnvironmentUtils-cb76d69b.js';
import './BufferView-a9ba6e5d.js';
import './vec33-241a09d2.js';
import './DefaultMaterial_COLOR_GAMMA-ba792f7e.js';
import './types-4487be8c.js';
import './enums-4770f29d.js';
import './Version-44ff489f.js';
import './VertexAttribute-ef09ced9.js';
import './Texture-f189b7ba.js';
import './FramebufferObject-bfb23fd2.js';
import './VertexElementDescriptor-3b53aa99.js';
import './InterleavedLayout-fe763b01.js';
import './EdgeProcessingWorker-87151cf6.js';
import './deduplicate-3951315a.js';
import './RenderingContext-f60b1ec5.js';
import './ProgramCache-0964dba1.js';
import './Program-634dbdbe.js';
import './floatRGBA-64e5bf11.js';
import './DefaultVertexAttributeLayouts-664d07a8.js';
import './labelFormatUtils-d19cf46d.js';
import './earcut-4e6b97b1.js';
import './MeshComponent-b778671b.js';
import './screenshotUtils-af7d4bfe.js';
import './Octree-38bc90df.js';
import './callExpressionWithFeature-cfe9aa0a.js';
import './projection-a57f78d7.js';
import './geometryServiceUtils-b4e25893.js';
import './project-248cf8a5.js';
import './VectorTile-93124859.js';
import './enums-33a95ace.js';
import './config-5446e136.js';
import './TiledDisplayObject-2082c8d9.js';
import './DisplayObject-f25c6d04.js';
import './TileKey-97254206.js';
import './I3SBinaryReader-1f7e5bc9.js';
import './I3SNode-418da2f2.js';
import './featureQueryAll-cad40ef9.js';
import './Graphics3DScaleVisibility-67960f77.js';
import './rendererConversion-44fa5fc2.js';
import './optimizedFeatureQueryEngineAdapter-4bdd6f14.js';
import './centroid-a69e0a54.js';
import './PooledRBush-70299040.js';
import './quickselect-d6c9284c.js';
import './Graphics3DObjectStates-368614cc.js';
import './floorFilterUtils-904cfc06.js';
import './QueryEngine-115f26ee.js';
import './QueryEngineResult-4211c0f6.js';
import './WhereClause-ae6d22ff.js';
import './utils-8ef1ee04.js';
import './generateRendererUtils-9d353c6e.js';
import './projectionSupport-d3b04744.js';
import './json-063a6f95.js';
import './utils-208ed644.js';
import './QueryEngineCapabilities-30e4c4d1.js';
import './timeSupport-c113f15a.js';
import './attributeUtils-af7a9a43.js';
import './LayerView-1ee5d9ed.js';
import './popupUtils-37e309e6.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
class r extends n{constructor(e){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:e=>[e.geometryBuffer]},e,{hasInitialize:!0});}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.24/esri/copyright.txt for details.
*/
const Z=s.getLogger("esri.views.3d.layers.SceneLayerGraphicsView3D"),Y=i();let J=class extends(p(c(n$1(g)))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._nodesAddedToStage=new Map,this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this.loadedGraphics=new s$1,this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20;}initialize(){const e=this.layer;this.addResolvingPromise(e.indexInfo),this._attributeOverrides=new f(this.layer,this.view.resourceController?.memoryController),ze(e,this.view.spatialReference,this.view.viewingMode),this.fieldsHelper=new c$1({layerView:this}),this.updatingHandles.add((()=>e.rangeInfos),(e=>this._rangeInfosChanged(e)),h),this.updatingHandles.add((()=>e.renderer),((e,t)=>this._rendererChange(e,t))),this.updatingHandles.add((()=>[this.parsedDefinitionExpression,this.excludeObjectIdsSorted]),(()=>this._filterChange())),this.updatingHandles.add((()=>this.view.floors),(()=>r$1(this.processor.filterVisibility)&&this.processor.filterVisibility.filterChanged())),this.handles.add(l((()=>t.I3S_TREE_SHOW_TILES),(e=>{if(e&&!this._treeDebugger){const e=this._controller.crsIndex;import('./I3STreeDebugger-af5e6958.js').then((({I3STreeDebugger:t$1})=>{!this._treeDebugger&&t.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new t$1({lv:this,view:this.view,nodeSR:e}));}));}else e||!this._treeDebugger||t.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null);}),h)),this._set("processor",new F({owner:this,preferredUpdatePolicy:o.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,dataExtent:e.fullExtent,updateClippingExtent:e=>this._updateClippingExtent(e)})),this.processor.elevationAlignment?.events.on("invalidate-elevation",(e=>this._invalidateElevation(e))),this.supportsHeightUnitConversion&&(this._verticalScale=o$1("point",e.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.setup()),this._memCache=this.view.resourceController.memoryController.newCache(e.uid),this._controller=new te$1({layerView:this,scaleVisibilityEnabled:!1}),ie$1(this.layer.geometryDefinitions)&&(this._worker=new r((e=>this.view.resourceController.schedule(e)))),this.handles.add(this.layer.on("apply-edits",(e=>this.updatingHandles.addPromise(e.result)))),this.handles.add(this.layer.on("edits",(e=>this._handleEdits(e)))),this.when((()=>{this._queryEngine=new l$1({layerView:this,priority:L.FEATURE_QUERY_ENGINE}),this.updatingHandles.add((()=>this.maximumNumberOfFeatures),(e=>this._controller.featureTarget=e),h),this.updatingHandles.add((()=>this.suspended),(e=>{e&&this._removeAllNodeData();}));}));}destroy(){this._treeDebugger=l$2(this._treeDebugger),this._attributeOverrides=l$2(this._attributeOverrides),this._set("processor",l$2(this.processor)),this._controller=l$2(this._controller),this._queryEngine=l$2(this._queryEngine),this._worker=l$2(this._worker),this._memCache=l$2(this._memCache),this._nodesAddedToStage.clear(),this.fieldsHelper=l$2(this.fieldsHelper);}get requiredFields(){return this.fieldsHelper?.requiredFields??[]}get maximumNumberOfFeatures(){const e=this.processor?.graphicsCore?.displayFeatureLimit;return e?.maximumNumberOfFeatures??0}set maximumNumberOfFeatures(e){null!=e?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1);}get maximumNumberOfFeaturesExceeded(){return !this.suspended&&(!!this._controller?.useMaximumNumberOfFeatures&&!this._controller.leavesReached)}get excludeObjectIdsSorted(){const e=this.layer.excludeObjectIds;return e.length?e.toArray().sort(((e,t)=>e-t)):null}get lodFactor(){return "Labels"===this.layer.semantic?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return !1}get hasZ(){return !0}async whenGraphicAttributes(e,t){return Se(this.layer,e,this._getObjectIdField(),t,(()=>[...this._nodesAddedToStage.values()]))}getHit(e){if(!this.loadedGraphics)return null;const t=c$2(this.loadedGraphics.find((t=>t.uid===e)),this.layer),r=this._getObjectIdField();return t&&t.attributes&&t.attributes[r]?(t.layer=this.layer,t.sourceLayer=this.layer,{type:"graphic",graphic:t,layer:t.layer}):null}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor.computeAttachmentOrigin(e,t)}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}isUpdating(){return !!(this._controller?.updating||this.processor?.updating||this.fieldsHelper?.updating||this.layerFilterUpdating)}highlight(e){return this.processor.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return i$1(this.attributeEditingContext,e)}async _extractBinaryPointData(e,t){const r$2={geometryBuffer:e.geometryBuffer};return t$1(this._worker)&&(this._worker=new r((e=>this.view.resourceController.schedule(e)))),this._worker.invoke(r$2,t).then((e=>{if(r$1(e)){return {positionData:e.positions,featureIds:e.featureIds}}throw new Error("Failed to decompress Draco point data")}))}_checkExtent(e$1,t){e$1&&!e(e$1,t)&&(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&Z.error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&Z.error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++);}async addNode(e,t,r){if(!ee(t)&&!X(t))throw new Error;if(this._nodesAddedToStage.has(e.index))return void Z.error("I3S node "+e.id+" already added");const i=r$1(this.layer.fullExtent)?re(this.layer.fullExtent.clone(),.5):null,o=this._controller.crsVertex,a=[],n={graphics:null,featureIds:null,attributeInfo:t.attributeDataInfo,node:e};if(ee(t)?await this._addNodeBinaryPointData(e,n,t,i,a,r):X(t)&&this._addNodeLegacyPointData(e,n,t,i,a),await this._attributeOverrides.apply(n.featureIds,t.attributeDataInfo,r),e.numFeatures=n.graphics.length,this._updateNodeMemory(e),te(n),a.length>0&&(this._computeObb(e,a,o),this._controller.updateVisibility(e.index)),this._controller.isGeometryVisible(e)){if(r$1(this._verticalScale))for(const e of n.graphics)this._verticalScale(e.geometry);this._nodesAddedToStage.set(e.index,n),this.loadedGraphics.addMany(n.graphics),this._controller.updateLoadStatus(e.index,!0),this._filterNode(n),this._treeDebugger&&this._treeDebugger.update();}else this._cacheNodeData(n);}_computeObb(e,t,r){const i=this._controller.crsIndex,s=i.isGeographic?this.view.renderSpatialReference:i;Un(t,r,0,t,s,0,t.length/3);const o={data:t,size:3};e.serviceObb=H(o),i.isGeographic&&Bn(e.serviceObb.center,s,e.serviceObb.center,i);}isNodeLoaded(e){return this._nodesAddedToStage.has(e)}isNodeReloading(){return !1}updateNodeState(){}async _addNodeBinaryPointData(e,r,i,o,a,d){const l=await this._extractBinaryPointData(i,d);if(null==l)throw new Error;const h=this._getObjectIdField(),u$1=this._controller.crsVertex,g=this.view.spatialReference,y=this.processor.graphicsCore,{positionData:f,featureIds:_}=l,b=3,v$1=f.length/b,x=new Array;for(let I=0;I<v$1;I++){const r=r$1(e.serviceObb)?e.serviceObb.center:[0,0,0],i=I*b,d=r$2(f[i+0],f[i+1],f[i+2]);u(d,d,r),e.serviceObb||a.push(d[0],d[1],d[2]),r$1(o)&&this._checkExtent(o,d);const l=_[I],v$1={};null!=l&&(v$1[h]=l);const S=null==l?g$1.generateUID():l;Un(d,u$1,0,se,g,0,1);const w=v(se[0],se[1],se[2],g),D=this.loadedGraphics.get(S);if(r$1(D))D.level<e.level&&(oe.property="geometry",oe.graphic=D,oe.oldValue=e$1(D.geometry),oe.newValue=w,D.geometry=w,y.graphicUpdateHandler(oe)),x.push(D);else {const r=g$1.generateUID();x.push({objectId:S,uid:r,geometry:w,attributes:v$1,visible:!0,level:e.level});}}r.graphics=x,r.featureIds=Array.from(_);}_addNodeLegacyPointData(e,r,i,o,a){const n=this._getObjectIdField(),d=this._controller.crsVertex,l=this.view.spatialReference,h=[0,0,0],u=new Array,c=new Array;for(const p of i.pointData){const r=p.featureDataPosition,i=r.length,g=p.geometries&&p.geometries[0]||ie[i],y=p.featureIds[0];if("points"!==g.params.type)continue;r$1(o)&&this._checkExtent(o,r);const f={};null!=y&&(f[n]=y);const _=null==y?g$1.generateUID():y;let b;"Embedded"===g.type&&(b=g.params.vertexAttributes.position);for(let o=0;o<b.length;o+=i){for(let e=0;e<i;e++)h[e]=r[e]+b[o+e];const n=3===i;e.serviceObb||a.push(h[0],h[1],n?h[2]:0),Un(h,d,0,se,l,0,1);const u=v(se[0],se[1],n?se[2]:void 0,l),p=this.loadedGraphics.get(_);r$1(p)?c.push(p):c.push({objectId:_,uid:g$1.generateUID(),geometry:u,attributes:f,visible:!0});}u.push(y);}r.graphics=c,r.featureIds=u;}_updateNodeMemory(e){e.memory=4096+(r$1(e.numFeatures)?e.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0);}_cacheNodeData(e){const t=e.graphics.reduce(((e,t)=>A(t)+e),512+8*e.featureIds.length+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t);}_getMemCacheKey(e){return `${e.index}`}_removeAllNodeData(){this._nodesAddedToStage.forEach(((e,t)=>{if(e){const t=e.node;this._updateNodeMemory(t),this._cacheNodeData(e);}this._controller.updateLoadStatus(t,!1);})),this._nodesAddedToStage.clear(),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear();}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t));}_removeNodeStageData(e){const t=this._nodesAddedToStage.get(e);return t?(this._controller.updateLoadStatus(e,!1),this.loadedGraphics.removeMany(t.graphics),this._nodesAddedToStage.delete(e),this._treeDebugger&&this._treeDebugger.update(),t):null}async loadCachedNodeData(e){return this._memCache.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,r,i){this._nodesAddedToStage.has(e.index)?Z.error("I3S node "+e.id+" already added"):(this.loadedGraphics.addMany(t.graphics),this._nodesAddedToStage.set(e.index,t),this._controller.updateLoadStatus(e.index,!0),this._updateNodeMemory(e),await this.updateAttributes(e.index,r,i),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update());}getLoadedNodeIds(){const e=[];return this._nodesAddedToStage.forEach((t=>e.push(t.node.id))),e.sort()}getVisibleNodes(){const e=new Array;return this._nodesAddedToStage.forEach((t=>e.push(t.node))),e}getLoadedNodeIndices(e){this._nodesAddedToStage.forEach(((t,r)=>e.push(r)));}getLoadedAttributes(e){const t=this._nodesAddedToStage.get(e);if(t&&r$1(t.attributeInfo))return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this._nodesAddedToStage.get(e);if(t&&r$1(t.attributeInfo))return t.attributeInfo.attributeData}_setAttributeData(e,t){const r=this._nodesAddedToStage.get(e);r&&!t$1(r.attributeInfo)&&(r.attributeInfo.attributeData=t,this._attributeValuesChanged(r));}async updateAttributes(e,t,r){const i=this._nodesAddedToStage.get(e);i&&(await this._attributeOverrides.apply(i.featureIds,t,r),i.attributeInfo=t,this._attributeValuesChanged(i));}_attributeValuesChanged(e){if(te(e),this._filterNode(e),this.processor.graphicsCore.labelsEnabled){const t=e.graphics.map((e=>e.uid));this.processor.graphicsCore.updateLabelingInfo(t);}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||"OBJECTID"}async _rendererChange(e,t){const{layer:{fieldsIndex:r}}=this,i=new Set;let s,o;e?(await e.collectRequiredFields(i,r),s=Array.from(i).sort()):s=[],i.clear(),t?(await t.collectRequiredFields(i,r),o=Array.from(i).sort()):o=[],s.length===o.length&&s.every(((e,t)=>s[t]===o[t]))||this._reloadAllNodes();}_rangeInfosChanged(e){null!=e&&e.length>0&&Z.warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.");}_filterChange(){this._nodesAddedToStage.forEach((e=>this._filterNode(e)));}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading();}_filterNode(e){const t=this.parsedDefinitionExpression,i=this.excludeObjectIdsSorted,s=this._getObjectIdField();for(const o of e.graphics){const e=o.visible,n=!t||this._evaluateClause(t,o),d=t$1(i)||M(i,o.attributes[s])<0;o.visible=n&&d,e!==o.visible&&(oe.graphic=o,oe.property="visible",oe.oldValue=e,oe.newValue=o.visible,this.processor.graphicsCore.graphicUpdateHandler(oe));}}_invalidateElevation(e){const t=this._controller.crsIndex;zn(e.extent,e.spatialReference,ae,t),this._controller.updateElevationChanged(ae,t);}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return r$1(this.filter)?this.filter.createQuery(e):new b(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),t?.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),t?.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),t?.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),t?.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(t$1(e)?this.createQuery():b.from(e))}getUsedMemory(){return this.processor?.graphicsCore?.usedMemory??0}getUnloadedMemory(){return .8*((this._controller?.unloadedMemoryEstimate??0)+(this.processor?.graphicsCore?.unprocessedMemoryEstimate??0))}ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}_handleEdits(e){a(this.attributeEditingContext,e);}get attributeEditingContext(){const e=this._getObjectIdField();return {sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,forEachNode:e=>this._nodesAddedToStage.forEach((t=>e(t.node,t.featureIds))),attributeStorageInfo:this.i3slayer.attributeStorageInfo,attributeOverrides:this._attributeOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(t,r,i)=>{this._setAttributeData(t,r);const o=this._nodesAddedToStage.get(t);if(r$1(i)){const t=this.loadedGraphics.get(i.attributes[e]);r$1(t)&&this.processor.graphicsCore.recreateGraphics([t]);}else r$1(o)&&this.processor.graphicsCore.recreateGraphics(o.graphics);},clearMemCache:()=>{}}}get performanceInfo(){const e={displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:this.maximumNumberOfFeatures,totalNumberOfFeatures:-1,nodes:this._nodesAddedToStage.size,core:this.processor.graphicsCore.performanceInfo};return this._controller&&this._controller.updateStats(e),e}get test(){return {controller:this._controller,numNodes:this._nodesAddedToStage.size,loadedGraphics:this.loadedGraphics}}};e$2([d()],J.prototype,"processor",void 0),e$2([d({type:y})],J.prototype,"filter",void 0),e$2([d()],J.prototype,"loadedGraphics",void 0),e$2([d({aliasOf:"layer"})],J.prototype,"i3slayer",void 0),e$2([d()],J.prototype,"_controller",void 0),e$2([d()],J.prototype,"updating",void 0),e$2([d()],J.prototype,"suspended",void 0),e$2([d()],J.prototype,"holeFilling",void 0),e$2([d(t$2)],J.prototype,"updatingProgress",void 0),e$2([d({aliasOf:"_controller.updatingProgress"})],J.prototype,"updatingProgressValue",void 0),e$2([d(Y.requiredFields)],J.prototype,"requiredFields",null),e$2([d(Y.availableFields)],J.prototype,"availableFields",void 0),e$2([d()],J.prototype,"fieldsHelper",void 0),e$2([d({type:Number})],J.prototype,"maximumNumberOfFeatures",null),e$2([d({readOnly:!0})],J.prototype,"maximumNumberOfFeaturesExceeded",null),e$2([d()],J.prototype,"excludeObjectIdsSorted",null),e$2([d({readOnly:!0})],J.prototype,"lodFactor",null),e$2([d({readOnly:!0})],J.prototype,"hasM",null),e$2([d({readOnly:!0})],J.prototype,"hasZ",null),J=e$2([n$2("esri.views.3d.layers.SceneLayerGraphicsView3D")],J);const $=J;function X(e){return "pointData"in e}function ee(e){return "geometryBuffer"in e&&null!==e.geometryBuffer}function te(e){const t=e.attributeInfo;for(let r=0;r<e.graphics.length;r++){const i=e.graphics[r];if(i.attributes||(i.attributes={}),r$1(t)&&r$1(t.loadedAttributes))for(const{name:e}of t.loadedAttributes)t.attributeData[e]&&(i.attributes[e]=Me(t.attributeData[e],r));}}function re(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,e.hasZ&&(e.zmin-=t,e.zmax+=t),e.hasM&&(e.mmin-=t,e.mmax+=t),e}const ie={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},se=n$3(),oe={graphic:null,property:null,oldValue:null,newValue:null},ae=u$1();

export default $;
