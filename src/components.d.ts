/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface FindMyService {
        "council": boolean;
        "groupId": string;
        "loadGroup": (id: any) => Promise<any>;
        "loadMaps": (items: any) => Promise<any[]>;
        "loadSearchWidget": () => Promise<__esri.widgetsSearch>;
        "searchMapLayers": (geometry: any, maps: any) => Promise<void>;
    }
    interface WaterUsage {
    }
    interface WebMap {
        "address": string;
        "basemap": string;
        "center": string;
        "geocodeAddress": (view: any, address: any, zoom: any) => Promise<void>;
        "height": string;
        "layerlist": boolean;
        "legend": boolean;
        "loadLayerList": (view: any) => Promise<void>;
        "loadLegend": (view: any) => Promise<void>;
        "loadMap": () => Promise<__esri.MapView>;
        "loadSearch": (view: any) => Promise<void>;
        "loadWebMap": (id: any) => Promise<__esri.MapView>;
        "loadWebScene": (id: any) => Promise<__esri.SceneView>;
        "mapId": string;
        "navigate": boolean;
        "removeNavigation": (view: any) => Promise<void>;
        "sceneId": string;
        "search": boolean;
        "width": string;
        "zoom": number;
        "zoomTo": (view: any) => Promise<void>;
    }
}
declare global {
    interface HTMLFindMyServiceElement extends Components.FindMyService, HTMLStencilElement {
    }
    var HTMLFindMyServiceElement: {
        prototype: HTMLFindMyServiceElement;
        new (): HTMLFindMyServiceElement;
    };
    interface HTMLWaterUsageElement extends Components.WaterUsage, HTMLStencilElement {
    }
    var HTMLWaterUsageElement: {
        prototype: HTMLWaterUsageElement;
        new (): HTMLWaterUsageElement;
    };
    interface HTMLWebMapElement extends Components.WebMap, HTMLStencilElement {
    }
    var HTMLWebMapElement: {
        prototype: HTMLWebMapElement;
        new (): HTMLWebMapElement;
    };
    interface HTMLElementTagNameMap {
        "find-my-service": HTMLFindMyServiceElement;
        "water-usage": HTMLWaterUsageElement;
        "web-map": HTMLWebMapElement;
    }
}
declare namespace LocalJSX {
    interface FindMyService {
        "council"?: boolean;
        "groupId"?: string;
    }
    interface WaterUsage {
    }
    interface WebMap {
        "address"?: string;
        "basemap"?: string;
        "center"?: string;
        "height"?: string;
        "layerlist"?: boolean;
        "legend"?: boolean;
        "mapId"?: string;
        "navigate"?: boolean;
        "sceneId"?: string;
        "search"?: boolean;
        "width"?: string;
        "zoom"?: number;
    }
    interface IntrinsicElements {
        "find-my-service": FindMyService;
        "water-usage": WaterUsage;
        "web-map": WebMap;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "find-my-service": LocalJSX.FindMyService & JSXBase.HTMLAttributes<HTMLFindMyServiceElement>;
            "water-usage": LocalJSX.WaterUsage & JSXBase.HTMLAttributes<HTMLWaterUsageElement>;
            "web-map": LocalJSX.WebMap & JSXBase.HTMLAttributes<HTMLWebMapElement>;
        }
    }
}
